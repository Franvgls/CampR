function (gr, esp, camps, dns = "Porc", ind = "p", cor.time = TRUE, 
    kg = TRUE, ci.lev = 0.8, DLS = F, DLSrat = c(2, 5), idi = "l", 
    SE = TRUE, es = TRUE, excl.sect = NA, sector = NA, ti = TRUE, 
    Nas = FALSE, ymax = NA, mar = NA, tline = FALSE, years = TRUE, 
    sub = FALSE, cex.leg = 1.1) 
{
    options(scipen = 2)
    if (length(sector) > 1) {
        stop("Para calcular más de un sector utilice excl.sect quitando los no deseados")
    }
    if (tline & DLS) {
        stop("Elija línea de tendencia tline=T o cambios últimos 2 años frente a 3 previos DLS=T")
    }
    op <- par("mar")
    if (any(is.na(mar))) 
        par(mar = c(4, 4.5, 2.5, 2.5) + 0.1)
    else par(mar = mar, mgp = c(2.8, 0.8, 0))
    esp <- format(esp, width = 3, justify = "r")
    ndat <- length(camps)
    dumb <- NULL
    dumbSETot <- data.frame(avg = NULL, SE = NULL, camp = NULL)
    for (i in 1:ndat) {
        dumb <- rbind(dumb, cbind(datos.camp(gr, esp, camps[i], 
            dns, cor.time = cor.time, kg = kg), camp = camps[i]))
        dumbSE <- CV.camp(gr, esp, camps[i], dns, cor.time = cor.time, 
            Nas = Nas, ind = ind, excl.sect = excl.sect)
        if (is.na(sector)) {
            dumbSETot <- rbind(dumbSETot, data.frame(avg = dumbSE$total[1], 
                SE = dumbSE$total[2], camp = camps[i]))
        }
        else {
            if (nchar(sector) == 2) {
                dumbSect <- dumbSE$locales[, which(colnames(dumbSE$locales) == 
                  sector)]
                dumbSETot <- rbind(dumbSETot, data.frame(avg = dumbSect[1], 
                  SE = dumbSect[2], camp = camps[i]))
            }
            else {
                if (!is.na(match(sector, colnames(dumbSE[[2]])) > 
                  0)) {
                  dumbSect <- dumbSE[[2]][, which(colnames(dumbSE[[2]]) == 
                    sector)]
                  dumbSETot <- rbind(dumbSETot, data.frame(avg = dumbSect[1], 
                    SE = dumbSect[2], camp = camps[i]))
                }
                if (!is.na(match(sector, colnames(dumbSE[[3]])))) {
                  dumbSect <- dumbSE[[3]][, which(colnames(dumbSE[[3]]) == 
                    sector)]
                  dumbSETot <- rbind(dumbSETot, data.frame(avg = dumbSect[1], 
                    SE = dumbSect[2], camp = camps[i]))
                }
            }
        }
    }
    if (any(!is.na(excl.sect))) {
        dumb$sector <- gsub("NA", "N", dumb$sector)
        for (i in 1:length(excl.sect)) {
            if (length(grep(excl.sect[i], as.character(dumb$sector))) > 
                0) 
                dumb <- dumb[-grep(excl.sect[i], as.character(dumb$sector)), 
                  ]
        }
        dumb$sector <- factor(as.character(dumb$sector))
    }
    dumb$camp <- factor(dumb$camp)
    dumbSETot$camp <- factor(dumbSETot$camp)
    if (ind == "p") {
        if (any(is.na(sector))) {
            if (ci.lev > 0) 
                dumb.env <- boot::envelope(boot::boot(dumb$peso, 
                  strmean.camps, 1000, stype = "f", strata = dumb$sector, 
                  sector = dumb$sector, area = dumb$arsect, camps = dumb$camp), 
                  level = ci.lev)
            dumb.mean <- strmean.camps(dumb$peso, dumb$sector, 
                dumb$arsect, camps = dumb$camp)
        }
        else {
            if (ci.lev > 0) 
                dumb.env <- boot::envelope(boot::boot(dumb$peso[grep(sector, 
                  as.character(dumb$sector))], strmean.camps, 
                  1000, stype = "f", strata = dumb$sector[grep(sector, 
                    as.character(dumb$sector))], sector = dumb$sector[grep(sector, 
                    as.character(dumb$sector))], area = dumb$arsect[grep(sector, 
                    as.character(dumb$sector))], camps = dumb$camp[grep(sector, 
                    as.character(dumb$sector))]), level = ci.lev)
            dumb.mean <- strmean.camps(dumb$peso[grep(sector, 
                as.character(dumb$sector))], dumb$sector[grep(sector, 
                as.character(dumb$sector))], dumb$arsect[grep(sector, 
                as.character(dumb$sector))], camps = dumb$camp[grep(sector, 
                as.character(dumb$sector))])
        }
        yetiq <- ifelse(es, expression("Yst" ~ ~("kg" %*% "lan"^-1)), 
            expression("kg" %*% "haul"^-1))
    }
    else {
        if (is.na(sector)) {
            if (ci.lev > 0) 
                dumb.env <- boot::envelope(boot::boot(dumb$num, 
                  strmean.camps, 1000, stype = "f", strata = dumb$sector, 
                  sector = dumb$sector, area = dumb$arsect, camps = dumb$camp), 
                  level = ci.lev)
            dumb.mean <- strmean.camps(dumb$num, dumb$sector, 
                dumb$arsect, camps = dumb$camp)
        }
        else {
            if (ci.lev > 0) 
                dumb.env <- boot::envelope(boot::boot(dumb$num[grep(sector, 
                  as.character(dumb$sector))], strmean.camps, 
                  1000, stype = "f", strata = dumb$sector[grep(sector, 
                    as.character(dumb$sector))], sector = dumb$sector[grep(sector, 
                    as.character(dumb$sector))], area = dumb$arsect[grep(sector, 
                    as.character(dumb$sector))], camps = dumb$camp[grep(sector, 
                    as.character(dumb$sector))]), level = ci.lev)
            dumb.mean <- strmean.camps(dumb$num[grep(sector, 
                as.character(dumb$sector))], dumb$sector[grep(sector, 
                as.character(dumb$sector))], dumb$arsect[grep(sector, 
                as.character(dumb$sector))], camps = dumb$camp[grep(sector, 
                as.character(dumb$sector))])
        }
        yetiq <- ifelse(es, expression("Ind" %*% "lan"^-1), expression("Ind" %*% 
            "haul"^-1))
    }
    xetiq <- ifelse(es, ifelse(years, "Año", "Campaña"), ifelse(years, 
        "Year", "Survey"))
    especie <- buscaesp(gr, esp, idi)
    if (is.na(ymax)) 
        ymax <- max(0.05, ifelse(ci.lev > 0, max(dumb.env$point[1, 
            ]), max(dumbSETot$SE + dumbSETot$avg, na.rm = TRUE)) * 
            1.05)
    plot(dumb.mean, xlab = xetiq, ylab = yetiq, ylim = c(0, ymax), 
        axes = FALSE, cex.lab = cex.leg * 0.9)
    rect(-1000, -1000, 10^5, 10^5, col = "white")
    if (is.logical(ti)) {
        if (ti) {
            title(main = especie, cex.main = 1.1 * cex.leg, font.main = ifelse((idi != 
                "l" | any(esp == "999")), 2, 4), line = ifelse(any(is.character(sub), 
                sub), 1.5, 1))
        }
    }
    else {
        title(main = ti, font.main = 4, line = 1.2, cex.main = 1.1 * 
            cex.leg)
    }
    if (is.logical(sub)) {
        if (sub) {
            title(main = ifelse(ind == "p", ifelse(es, "Biomasa", 
                "Biomass"), ifelse(es, "Número", "Number")), 
                font.main = 2, line = 0.3, cex.main = cex.leg * 
                  0.9)
        }
    }
    else title(main = sub, line = 0.3, font.main = 2, cex.main = cex.leg * 
        0.9)
    grid(nx = NA, ny = NULL, col = gray(0.4))
    if (ci.lev > 0) {
        lines(1:ndat, dumb.env$point[1, ], lty = 1)
        lines(1:ndat, dumb.env$point[2, ], lty = 1)
    }
    if (tline & !DLS) 
        abline(lm(dumb.mean ~ c(1:ndat)), lty = 2, col = 2, lwd = 2)
    if (SE) {
        for (i in 1:ndat) {
            rect(i - 0.15, dumbSETot$avg[i] + dumbSETot$SE[i], 
                i + 0.15, dumbSETot$avg[i] - dumbSETot$SE[i], 
                col = gray(0.8))
        }
    }
    points(dumbSETot$avg, pch = 16, cex = 0.6, type = "p")
    if (DLS & !tline) {
        points(dumbSETot$avg, pch = 16, cex = 0.6, type = "l")
        dats <- tail(dumbSETot$avg, sum(DLSrat))
        last <- mean(tail(dats, DLSrat[1]))
        prev <- mean(head(dats, DLSrat[2]))
        lines(c(ndat + 0.5, ndat - DLSrat[1] + 0.5), c(last, 
            last), col = 2, lwd = 3, lty = 3)
        lines(c(ndat - DLSrat[1] + 0.5, ndat - DLSrat[2] - 1.5), 
            c(prev, prev), col = 2, lwd = 3, lty = 3)
    }
    box()
    axis(2, las = 2, cex.axis = cex.leg * 0.9)
    if (years) 
        axis(1, at = 1:ndat, labels = camptoyear(camps), las = 2, 
            cex.axis = cex.leg * 0.9)
    else axis(1, at = 1:ndat, labels = camps, las = 1, cex.axis = cex.leg * 
        0.9)
    if (ci.lev > 0) 
        axis(4, at = dumb.env$point[, ndat], labels = rev(paste(round(dumb.env$k.pt/10, 
            0), "%")), tick = FALSE, cex.axis = cex.leg * 0.6, 
            las = 1, line = -0.5)
    par(op)
    dumbSETot
}
<bytecode: 0x1596a290>
<environment: namespace:CampR>
